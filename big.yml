---
- name: Create VENV
  hosts: all
  tasks:
    - name: Install python-pip
      become: yes
      become_method: sudo
      apt:
        update_cache: yes
        name: python-pip,uwsgi,uwsgi-plugin-python,nginx,postgresql,libpq-dev,python-psycopg2,build-essential,libssl-dev,libffi-dev,python-dev
        state: latest
    - name: Install virtualenv
      become: yes
      become_method: sudo
      pip:
       name: virtualenv
       state: latest	 
    - name: Creates directory
      file: path=~/venv state=directory
    - name: create venv
      pip:
        name: mezzanine,fabric,psycopg2
        virtualenv: ~/venv
    - name: Deploy project
      git: 
        repo: 'https://github.com/Ertinfagor/testapp.git'
        dest: /home/ubuntu/venv/myproject/

- name: UWSGI
  hosts: all
  tasks:
    - name: Creates directory
      become: yes      
      file: 
        path: /etc/uwsgi/vassals 
        state: directory
    - name: copy INI
      become: yes
      copy:
        src: ./configs/project.ini
        dest: /etc/uwsgi/vassals/project.ini
    - name: copy Emperor.ini
      become: yes
      copy:
        src: ./configs/emperor.ini
        dest: /etc/uwsgi/emperor.ini
    - name: copy Service
      become: yes
      copy:
        src: ./configs/emperor.uwsgi.service
        dest: /etc/systemd/system/emperor.uwsgi.service
    - name: start Service
      become: yes
      command: systemctl start emperor.uwsgi.service
- name: NGINX
  hosts: all
  tasks:
    - name: copy conf
      become: yes 
      copy:
        src: ./configs/nginx.conf
        dest: /etc/nginx/sites-available/default
    - name: NGINX | Starting NGINX
      become: yes
      systemd:
        name: nginx
        state: restarted
        enabled: yes
        masked: no
- name: Postgres
  hosts: all
  become: yes
  gather_facts: no

  tasks:
- hosts: all
  become: yes
  become_user: postgres
  gather_facts: no

  vars:
    dbname: myapp
    dbuser: django
    dbpassword: mysupersecretpassword

  tasks:
  - name: ensure database is created
    postgresql_db: name={{dbname}}

  - name: ensure user has access to database
    postgresql_user: db={{dbname}} name={{dbuser}} password={{dbpassword}} priv=ALL

  - name: ensure user does not have unnecessary privilege
    postgresql_user: name={{dbuser}} role_attr_flags=NOSUPERUSER,NOCREATEDB
  
  - name: ensure no other user can access the database
    postgresql_privs: db={{dbname}} role=PUBLIC type=database priv=ALL state=absent

- hosts: all
  tasks:
  - name: migrate db
    command: /home/ubuntu/venv/bin/python /home/ubuntu/venv/myproject/manage.py migrate
